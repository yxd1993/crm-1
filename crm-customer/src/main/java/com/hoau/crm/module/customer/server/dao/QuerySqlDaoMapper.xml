<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC 
	"-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 操作日志实体的MyBatis映射文件 -->		
<mapper namespace="com.hoau.crm.module.customer.server.dao.QuerySqlDaoMapper"><!-- 最好是实体的地址 -->
    <!-- 定义实体与数据库的映射结果集 -->
	<resultMap type="com.hoau.crm.module.customer.api.shared.domain.QuerySql" id="querySqlResultMap">
		<id property="id" column="ID"/>
        <result property="number" column="NUM"/>
        <result property="sql" column="SQL1"/>
        <result property="tableHead" column="TABLEHEAD"/>
        <result property="param" column="PARAM"/>
        <result property="remark" column="REMARK"/>
        <result property="createUser" column="CREATOR"/>
        <result property="createDate" column="CREATE_DATE"/>
        <result property="modifyUser" column="MODIFIER"/> 
        <result property="modifyDate" column="MODIFY_DATE"/>
	</resultMap>
	<!-- 查询所有的自定义查询SQL -->	
	<select id="selectPageQuerySql" resultMap="querySqlResultMap"
		parameterType="com.hoau.crm.module.customer.api.shared.domain.QuerySql">
		<![CDATA[
			SELECT T.ID,
			T.NUM,
			convert(T.SQL1 using utf8) as SQL1,
			T.TABLEHEAD,
			T.PARAM,
			T.REMARK,
			T.CREATOR,
			T.CREATE_DATE,
			T.MODIFIER,
			T.MODIFY_DATE
			FROM T_BAM_QUERYSQL T
		]]>
		<where>
			1=1
			<if test="remark!=null and remark!=''">
				AND instr(T.REMARK ,#{remark,jdbcType=VARCHAR})>0 
			</if>
		</where>
	</select>	
	<!-- 分页查询所有自定义查询SQL总数	 -->	
    <select id="totalQuerySqlCount" resultType="long" parameterType="com.hoau.crm.module.customer.api.shared.domain.QuerySql">
		<![CDATA[
			SELECT 
			count(T.ID)
			FROM T_BAM_QUERYSQL T
		]]>
		<where>
			1=1
			<if test="remark!=null and remark!=''">
				AND instr(T.REMARK ,#{remark,jdbcType=VARCHAR})>0 
			</if>
		</where>
	</select>
	<!-- 修改自定义查询SQL-->	
	<update id="updateQuerySql" parameterType="com.hoau.crm.module.customer.api.shared.domain.QuerySql">
		UPDATE T_BAM_QUERYSQL
		<set>
			SQL1 = #{sql},	
			TABLEHEAD = #{tableHead},	
			PARAM = #{param},			     	
			REMARK = #{remark},						     	
		    MODIFIER = #{modifyUser},						     	
		    MODIFY_DATE = SYSDATE()						     	
		</set>	
		WHERE ID = #{id}
	</update>
	<!-- 批量删除自定义查询SQL-->	
	<delete id="deleteQuerySql" parameterType="java.util.List">
		DELETE FROM T_BAM_QUERYSQL
		WHERE ID IN 
		<foreach collection="list" open="(" close=")" 
			item="item" separator="," index="index" > 
			#{item}
		</foreach>
	</delete>
	<!-- 新增自定义查询SQL-->	
	<insert id="insertQuerySql" parameterType="com.hoau.crm.module.customer.api.shared.domain.QuerySql">
		<![CDATA[
			insert into T_BAM_QUERYSQL(
				ID,
				NUM,
				SQL1,
				TABLEHEAD,
				PARAM,
				REMARK,
				CREATOR,
				CREATE_DATE,
				MODIFIER,				     	
		   		MODIFY_DATE
				
			) values (
		]]>
			#{id},
			#{number},
			<choose>
				<when test="sql != null">
					#{sql,jdbcType=VARCHAR},
				</when>
				<otherwise>
					null,
				</otherwise>
			</choose>
			<choose>
				<when test="tableHead != null">
					#{tableHead,jdbcType=VARCHAR},
				</when>
				<otherwise>
					null,
				</otherwise>
			</choose>
			
			<choose>
				<when test="param != null">
					#{param,jdbcType=VARCHAR},
				</when>
				<otherwise>
					null,
				</otherwise>
			</choose>
			<choose>
				<when test="remark != null">
					#{remark,jdbcType=VARCHAR},
				</when>
				<otherwise>
					0,
				</otherwise>
			</choose>
			<choose>
				<when test="createUser != null">
					#{createUser,jdbcType=VARCHAR},
				</when>
				<otherwise>
					null,
				</otherwise>
			</choose>
					SYSDATE(),
			<choose>
				<when test="modifyUser != null">
					#{modifyUser,jdbcType=VARCHAR},
				</when>
				<otherwise>
					null,
				</otherwise>
			</choose>
				SYSDATE()
					
		<![CDATA[
			)
		]]>
	</insert>
	
	
	
	
    <!-- SQL角色信息查询 -->
	<select id="querySqlRoleList" parameterType="java.lang.String" resultType="com.hoau.crm.module.customer.api.shared.domain.RoleEntity">
	    select role_code as id,
	           role_name as roleName,
	           case
	             when (select count(1)
                       from t_bam_sql_role tr left join 
                            t_bam_querysql  tq on tq.id = tr.sqlid
                      where roleid = r.role_code
                        and tq.num = #{sqlCode}) > 0 then
	              '1'
	             else
	              '0'
	           end as status
	      from t_auth_role r
	</select>
	
	<!-- 添加Sql所属角色信息 -->
	<insert id="addSqlRoles" parameterType="java.util.List">
			INSERT INTO T_BAM_SQL_ROLE(ID,SQLID,ROLEID) values
		<foreach collection="list" item="item" index="index" separator="," >
			(#{item.id,jdbcType=VARCHAR},#{item.sqlId,jdbcType=VARCHAR},#{item.roleId,jdbcType=VARCHAR})
		</foreach>
	</insert>
	
	<!-- 删除SQL所属的BAM角色信息 -->
	<delete id="deleteSqlRoles" parameterType="java.util.List">
		DELETE FROM T_BAM_SQL_ROLE  WHERE sqlid  IN 
     ( select tq.id from t_bam_querysql  tq where  tq.id in 
		<foreach collection="list" open="(" close=")" 
			item="item" separator="," index="index" > 
			#{item}
		</foreach>
	  )	
	</delete>
	
	<!-- 删除SQL所属的BAM角色信息 -->
	<delete id="deleteSqlRoleById" parameterType="java.lang.String">
		DELETE FROM T_BAM_SQL_ROLE WHERE sqlid = #{sqlId}
	</delete>
	
	
</mapper>
